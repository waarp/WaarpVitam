<!--
  ~ This file is part of Waarp Project (named also Waarp or GG).
  ~
  ~  Copyright (c) 2019, Waarp SAS, and individual contributors by the @author
  ~  tags. See the COPYRIGHT.txt in the distribution for a full listing of
  ~  individual contributors.
  ~
  ~  All Waarp Project is free software: you can redistribute it and/or
  ~  modify it under the terms of the GNU General Public License as published by
  ~  the Free Software Foundation, either version 3 of the License, or (at your
  ~  option) any later version.
  ~
  ~  Waarp is distributed in the hope that it will be useful, but WITHOUT ANY
  ~  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
  ~  A PARTICULAR PURPOSE. See the GNU General Public License for more details.
  ~
  ~  You should have received a copy of the GNU General Public License along with
  ~  Waarp . If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>Waarp</groupId>
  <artifactId>Waarp-Vitam</artifactId>
  <version>${revision}</version>
  <packaging>jar</packaging>
  <name>Waarp Vitam Module</name>

  <inceptionYear>2019</inceptionYear>
  <description>Waarp integration for Vitam, for Ingest (upload) of SIP and for
    export of DIP
  </description>
  <organization>
    <name>Waarp</name>
    <url>http://www.waarp.fr</url>
  </organization>

  <licenses>
    <license>
      <name>GPL 3.0</name>
      <url>LICENSE.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Waarp Github</name>
      <id>fredericBregier</id>
      <roles>
        <role>Developer</role>
      </roles>
      <email>frederic.bregier at waarp.fr</email>
      <url>https://github.com/waarp</url>
    </developer>
    <developer>
      <name>Waarp Company</name>
      <id>waarp.fr</id>
      <roles>
        <role>The Waarp Project and Company</role>
      </roles>
      <email>info at waarp.fr</email>
      <url>https://www.waarp.fr</url>
    </developer>
  </developers>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/waarp/${project.artifactId}/issues/</url>
  </issueManagement>
  <scm>
    <connection>scm:git:git://github.com/waarp/${project.artifactId}.git
    </connection>
    <developerConnection>
      scm:git:git@github.com:YourID/${project.artifactId}.git
    </developerConnection>
    <url>https://github.com/waarp/${project.artifactId}</url>
  </scm>
  <distributionManagement>
    <site>
      <id>github.waarp</id>
      <url>file://${root.directory}/target/fullsite/</url>
    </site>
  </distributionManagement>

  <repositories>
    <repository>
      <id>waarp.releases</id>
      <name>Waarp releases</name>
      <url>https://raw.github.com/waarp/WaarpMaven2/master/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>jboss org</id>
      <name>Jboss org</name>
      <url>http://repository.jboss.org/nexus/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>com.anasoft.os.repository.releases</id>
      <name>ANASOFT OpenSource releases</name>
      <url>http://anasoft-os-repo.googlecode.com/svn/repository/releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>SNMP4J repository</id>
      <name>SNMP4J repository</name>
      <url>https://oosnmp.net/dist/release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>maven2</id>
      <url>http://repo1.maven.org/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>eaio.com</id>
      <name>EAIO</name>
      <url>http://eaio.com/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <name>PhantomJS</name>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
    <repository>
      <!--
      This repository refers to lib directory such that no need to
      install locally those extra dependencies
       -->
      <id>Local repository</id>
      <url>file://${maven.multiModuleProjectDirectory}/lib</url>
    </repository>
    <repository>
      <id>Vitam repository</id>
      <url>
        http://download.programmevitam.fr/vitam_repository/${vitam.version}/mvn_repo/
      </url>
    </repository>
  </repositories>

  <properties>
    <root.directory>${maven.multiModuleProjectDirectory}</root.directory>
    <module.project>false</module.project>
    <reuseThreadTest>false</reuseThreadTest>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <attach-distribution>false</attach-distribution>
    <jvm.option>-Djava.security.egd=file:/dev/./urandom</jvm.option>

    <!-- Sonar -->
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    <jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
    <sonar-maven-plugin.version>3.6.1.1688</sonar-maven-plugin.version>
    <sonar.sources>src/main/java</sonar.sources>
    <sonar.tests>src/test/java</sonar.tests>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.language>java</sonar.language>
    <sonar.skipDesign>true</sonar.skipDesign>
    <jacoco.outputDir>${root.directory}/target/jacoco</jacoco.outputDir>
    <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
    <!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
    <sonar.jacoco.reportPaths>${jacoco.outputDir}/${jacoco.out.ut.file}
    </sonar.jacoco.reportPaths>
    <!-- Jacoco output file for ITs -->
    <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
    <!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->
    <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}
    </sonar.jacoco.itReportPath>
    <sonar.exclusions>
      file:**/test/java/**/*,
      file:**/generated-sources/**/*,
      file:**/generated-test-sources/**/*,
      file:**/test-classes/**/*,
    </sonar.exclusions>
    <sonar.test.exclusions>
      **/src/test/**/*
    </sonar.test.exclusions>
    <sonar.surefire.reportsPath>target/surefire-reports
    </sonar.surefire.reportsPath>

    <!-- Others -->
    <filtermodule>**</filtermodule>
    <filterexclude></filterexclude>
    <waarp.directory.version>org.waarp</waarp.directory.version>
    <waarp.module.version>org/waarp</waarp.module.version>

    <!-- Waarp Versions -->
    <waarp.directory.version>test</waarp.directory.version>
    <waarp.module.version>test</waarp.module.version>
    <waarp.version>3.2.0</waarp.version>
    <waarp-vitam.version>1.0.0</waarp-vitam.version>
    <revision>${waarp-vitam.version}</revision>

    <!-- Dependencies versions -->
    <vitam.version>2.6.3-1</vitam.version>
    <netty.version>4.1.42.Final</netty.version>
    <netty-tcnative.version>2.0.26.Final</netty-tcnative.version>
    <slf4j.version>1.7.26</slf4j.version>
    <logback.version>1.2.3</logback.version>
    <commons.compress.version>1.19</commons.compress.version>
    <commons.daemon.version>1.2.0</commons.daemon.version>
    <commons.io.version>2.6</commons.io.version>
    <commons.dbcp.version>1.4</commons.dbcp.version>
    <commons.pool.version>2.5.0</commons.pool.version>
    <commons-exec.version>1.3</commons-exec.version>
    <commons-logging.version>1.2</commons-logging.version>
    <commons-net.version>3.6</commons-net.version>
    <commons-codec.version>1.12</commons-codec.version>
    <commons-beanutils.version>1.8.3</commons-beanutils.version>
    <commons-cli.version>1.4</commons-cli.version>
    <h2.version>1.4.191</h2.version><!--Java6 version -->
    <mariadb.version>1.7.4</mariadb.version>
    <mysql.version>5.1.48</mysql.version>
    <postgresql.version>42.2.6.jre6</postgresql.version>
    <oracle.version>6</oracle.version>
    <jackson.version>2.9.9</jackson.version>
    <junit.version>4.12</junit.version>
    <javaassist.version>3.25.0-GA</javaassist.version>
    <assertj.version>3.12.2</assertj.version>
    <easymock.version>4.0.2</easymock.version>
    <rest-assured.version>3.3.0</rest-assured.version>
    <mockito.version>2.28.2</mockito.version>
    <findbugs.version>2.0.1</findbugs.version>
    <test-containers.version>1.11.4</test-containers.version>
    <apache.ant.version>1.10.6</apache.ant.version>
    <zjsonpatch.version>0.4.9</zjsonpatch.version>
    <log4j2.version>2.12.1</log4j2.version>
    <selenium.version>3.141.59</selenium.version><!-- 3.3.1 4.0.0-alpha-2 3.141
    .59-->
    <jnr-posix-version>3.0.50</jnr-posix-version>

    <!-- Maven plugins -->
    <maven.rpm-maven-plugin.version>2.1.5</maven.rpm-maven-plugin.version>
    <!-- keep surefire and failsafe in sync -->
    <maven.surefire.version>3.0.0-M3</maven.surefire.version><!-- 2.17 -->
    <maven.failsafe.version>3.0.0-M3</maven.failsafe.version><!-- 2.17 -->
    <maven.clean.version>3.1.0</maven.clean.version>
    <maven.compiler.version>3.8.1</maven.compiler.version><!-- 3.1 -->
    <maven.deploy.version>2.8.2</maven.deploy.version>
    <maven.resources.version>3.1.0</maven.resources.version><!-- 2.6 -->
    <maven.source.version>3.1.0</maven.source.version><!-- 2.3 -->
    <maven.dependency.version>3.1.1</maven.dependency.version><!-- 2.8 -->
    <maven.site.version>3.7.1</maven.site.version><!-- 3.3 -->
    <maven.assembly.version>3.1.1</maven.assembly.version><!-- 2.4 -->
    <maven.javadoc.version>3.1.1</maven.javadoc.version><!-- 2.8.1 -->
    <maven.exec.version>1.6.0</maven.exec.version>
    <maven.dependencycheck.version>5.2.1</maven.dependencycheck.version>
    <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version><!-- 2.5 3.0.0 -->
    <maven-project-info-reports-plugin.version>3.0.0
    </maven-project-info-reports-plugin.version>
    <maven-changes-plugin.version>2.12.1</maven-changes-plugin.version>
    <maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
    <taglist-maven-plugin.version>2.4</taglist-maven-plugin.version>
    <findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
    <maven-pmd-plugin.version>3.12.0</maven-pmd-plugin.version>
    <maven-jar-plugin.version>3.1.2</maven-jar-plugin.version><!-- 2.5 -->
    <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
    <ant-contrib.version>1.0b3</ant-contrib.version>
    <build-helper-maven-plugin.version>3.0.0
    </build-helper-maven-plugin.version><!-- 1.9 -->
    <license-maven-plugin.version>1.16</license-maven-plugin.version>
    <maven-enforcer-plugin.version>3.0.0-M2
    </maven-enforcer-plugin.version><!-- 1.3.1 -->
    <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
    <animal-sniffer-maven-plugin.version>1.18
    </animal-sniffer-maven-plugin.version>
    <ant.version>1.10.6</ant.version><!-- 1.8.2 -->
    <apiviz.version>1.3.4</apiviz.version>
    <maven-shade-plugin>3.2.1</maven-shade-plugin>
    <buildToolsVersion>1.3</buildToolsVersion>
    <coberturaMavenPluginVersion>2.7</coberturaMavenPluginVersion>
    <flatten-maven.version>1.1.0</flatten-maven.version>
    <spotbugs-maven-plugin-version>3.1.12.2</spotbugs-maven-plugin-version>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.version}</version>
          <configuration>
            <!--
            <argLine>${jvm.option}</argLine>
            -->
            <runOrder>alphabetical</runOrder>
            <!-- Non Parallel mode -->
            <parallel>classes</parallel>
            <threadCount>1</threadCount>
            <perCoreThreadCount>false</perCoreThreadCount>
            <forkCount>1</forkCount>
            <reuseForks>${reuseThreadTest}</reuseForks>
            <trimStackTrace>false</trimStackTrace>
            <systemPropertyVariables>
              <io.netty.leakDetection.level>paranoid
              </io.netty.leakDetection.level>

              <logback.configurationFile>
                ${project.basedir}/src/test/resources/logback-test.xml
              </logback.configurationFile>
            </systemPropertyVariables>
            <classpathDependencyExcludes>
              <classpathDependencyExclude>
                org.apache.logging.log4j:log4j-to-slf4j
              </classpathDependencyExclude>
            </classpathDependencyExcludes>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven.failsafe.version}</version>
          <!--
          <configuration>
            <argLine>${argLine} -Xmx2048m -XX:MaxPermSize=512M
              ${itCoverageAgent}</argLine>
          </configuration>
          -->
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.version}</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.dependency.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven.assembly.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>${maven-jxr-plugin.version}</version>
          <executions>
            <execution>
              <phase>pre-site</phase>
              <goals>
                <goal>aggregate</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.ant</groupId>
              <artifactId>ant</artifactId>
              <version>${ant.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.ant</groupId>
              <artifactId>ant-launcher</artifactId>
              <version>${ant.version}</version>
            </dependency>
            <dependency>
              <groupId>ant-contrib</groupId>
              <artifactId>ant-contrib</artifactId>
              <version>${ant-contrib.version}</version>
              <exclusions>
                <exclusion>
                  <groupId>ant</groupId>
                  <artifactId>ant</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${license-maven-plugin.version}</version>
          <configuration>
            <offline>true</offline>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.beiter.michael.util</groupId>
              <artifactId>build-tools</artifactId>
              <version>${buildToolsVersion}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <!-- Clean up after the build. -->
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean.version}</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>.</directory>
                <includes>
                  <include>create_db*.log</include>
                  <include>.attach_pid*</include>
                </includes>
                <followSymlinks>false</followSymlinks>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        <plugin>
          <!-- Code coverage agent -->
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <configuration>
            <append>true</append>
            <excludes>
              <exclude>com.gargoylesoftware.*</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <append>true</append>
                <destFile>${sonar.jacoco.reportPaths}</destFile>
                <output>file</output>
                <!--<propertyName>surefire.argLine</propertyName>-->
              </configuration>
            </execution>
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>pre-integration-test</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
              <configuration>
                <append>true</append>
                <destFile>${sonar.jacoco.itReportPath}</destFile>
                <output>file</output>
                <!--<propertyName>failsafe.argLine</propertyName>-->
              </configuration>
            </execution>
            <execution>
              <id>post-integration-test</id>
              <goals>
                <goal>report-integration</goal>
              </goals>
            </execution>
            <execution>
              <id>merge-results</id>
              <phase>verify</phase>
              <goals>
                <goal>merge</goal>
              </goals>
              <configuration>
                <fileSets>
                  <fileSet>
                    <directory>${jacoco.outputDir}</directory>
                    <includes>
                      <include>*.exec</include>
                    </includes>
                    <excludes>
                      <exclude>aggregate.exec</exclude>
                    </excludes>
                  </fileSet>
                </fileSets>
                <destFile>${jacoco.outputDir}/aggregate.exec</destFile>
              </configuration>
            </execution>
            <execution>
              <id>report-aggregate</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report-aggregate</goal>
              </goals>
              <configuration>
                <dataFileIncludes>
                  <dataFileInclude>${jacoco.outputDir}/aggregate.exec
                  </dataFileInclude>
                </dataFileIncludes>
                <outputDirectory>${jacoco.outputDir}/jacoco-aggregate
                </outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>post-merge-report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${jacoco.outputDir}/aggregate.exec</dataFile>
                <outputDirectory>${jacoco.outputDir}/jacoco-aggregate
                </outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <!-- Maven/Sonarqube integration -->
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>sonar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin}</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <minimizeJar>false</minimizeJar>
                <promoteTransitiveDependencies>true
                </promoteTransitiveDependencies>
                <createDependencyReducedPom>true</createDependencyReducedPom>
                <createSourcesJar>false</createSourcesJar>
                <keepDependenciesWithProvidedScope>true
                </keepDependenciesWithProvidedScope>
                <shadedArtifactAttached>true</shadedArtifactAttached>
                <shadedClassifierName>jar-with-dependencies
                </shadedClassifierName>
                <useBaseVersion>true</useBaseVersion>
                <transformers>
                  <transformer
                    implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer"/>
                  <transformer
                    implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                    <addHeader>false</addHeader>
                  </transformer>
                  <transformer
                    implementation="org.apache.maven.plugins.shade.resource.ResourceBundleAppendingTransformer"/>
                  <transformer
                    implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                  <transformer
                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <manifestEntries>
                      <X-Compile-Source-JDK>${java.version}
                      </X-Compile-Source-JDK>
                      <X-Compile-Target-JDK>${java.version}
                      </X-Compile-Target-JDK>
                    </manifestEntries>
                  </transformer>
                </transformers>
                <artifactSet>
                  <includes>
                    <include>Waarp</include>
                    <include>*</include>
                  </includes>
                  <excludes>
                    <exclude>classworlds:classworlds</exclude>
                    <exclude>junit</exclude>
                    <exclude>jmock</exclude>
                    <exclude>org.apache.maven:lib:tests</exclude>
                    <exclude>com.github.jnr</exclude>
                    <exclude>org.assertj</exclude>
                    <exclude>com.google.code.gson:*</exclude>
                    <exclude>io.rest-assured</exclude>
                    <exclude>org.easymock</exclude>
                    <exclude>org.mockito</exclude>
                    <exclude>org.testcontainers</exclude>
                    <exclude>net.java.dev.jna</exclude>
                    <exclude>org.apache.ant</exclude>
                    <exclude>Oracle</exclude>
                    <exclude>com.oracle.jdbc</exclude>
                  </excludes>
                </artifactSet>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>

    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven.version}</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${maven.dependencycheck.version}</version>
        <configuration>
          <skipProvidedScope>true</skipProvidedScope>
          <skipRuntimeScope>true</skipRuntimeScope>
          <skipTestScope>true</skipTestScope>
          <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
          <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
          <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <configuration>
          <rulesUri>
            file:///${project.basedir}/maven-version-rules.xml
          </rulesUri>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-tools</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <!-- Enforce java 1.7 as minimum for compiling -->
                  <!-- This is needed because of java.util.zip.Deflater and NIO UDP multicast-->
                  <version>[1.7.0,)</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[2.2.1,),[3.2,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <configuration>
              <fail>true</fail>
              <rules>
                <dependencyConvergence/>
              </rules>
            </configuration>
            <id>enforce-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <compilerVersion>1.8</compilerVersion>
          <fork>true</fork>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <testSource>1.8</testSource>
          <testTarget>1.8</testTarget>
          <debug>true</debug>
          <optimize>true</optimize>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <compilerArgument>-Xlint:all,-options</compilerArgument>
          <!-- XXX: maven-release-plugin complains - MRELEASE-715 -->
          <!--
          <compilerArguments>
            <Xlint:-options />
            <Xlint:unchecked />
            <Xlint:deprecation />
          </compilerArguments>
          -->
          <meminitial>256m</meminitial>
          <maxmem>2048m</maxmem>
        </configuration>
      </plugin>
      <plugin>
        <!-- ensure that only methods available in java 1.6 can
             be used even when compiling with java 1.7+ -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>${animal-sniffer-maven-plugin.version}</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java18</artifactId>
            <version>1.0</version>
          </signature>
          <ignores>
            <ignore>sun.misc.Unsafe</ignore>
          </ignores>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.version}</version>
        <executions>
          <!--
            ~ This workaround prevents Maven from executing the 'generate-sources' phase twice.
            ~ See http://jira.codehaus.org/browse/MSOURCES-13
            ~ and http://blog.peterlynch.ca/2010/05/maven-how-to-prevent-generate-sources.html
            -->
          <execution>
            <id>attach-sources</id>
            <phase>invalid</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <attach>true</attach>
            </configuration>
          </execution>
          <execution>
            <id>attach-sources-no-fork</id>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <configuration>
              <attach>true</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-distribution</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>${basedir}/src/assembly/default.xml</descriptor>
          </descriptors>
          <attach>${attach-distribution}</attach>
          <appendAssemblyId>true</appendAssemblyId>
          <tarLongFileMode>gnu</tarLongFileMode>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin-version}</version>
        <dependencies>
          <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>4.0.0-beta3</version>
          </dependency>
          <dependency>
            <groupId>org.beiter.michael.util</groupId>
            <artifactId>build-tools</artifactId>
            <version>${buildToolsVersion}</version>
          </dependency>
        </dependencies>
        <configuration>
          <includeFilterFile>
            ${root.directory}/assembly/spotbugs-security-include.xml
          </includeFilterFile>
          <excludeFilterFile>
            ${root.directory}/assembly/spotbugs-security-exclude.xml
          </excludeFilterFile>
          <plugins>
            <plugin>
              <groupId>com.h3xstream.findsecbugs</groupId>
              <artifactId>findsecbugs-plugin</artifactId>
              <version>LATEST
              </version> <!-- Auto-update to the latest stable -->
            </plugin>
            <plugin>
              <groupId>com.mebigfatguy.sb-contrib</groupId>
              <artifactId>sb-contrib</artifactId>
              <version>7.4.6</version>
            </plugin>
          </plugins>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <targetJdk>1.8</targetJdk>
          <rulesets>
            <ruleset>${root.directory}/src/assembly/pmd-exclude.xml</ruleset>
          </rulesets>
          <format>xml</format>
          <linkXRef>true</linkXRef>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <minimumTokens>100</minimumTokens>
          <failOnViolation>false</failOnViolation>
          <!-- <skip>${module.project}</skip>-->
          <aggregate>true</aggregate>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.beiter.michael.util</groupId>
            <artifactId>build-tools</artifactId>
            <version>${buildToolsVersion}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${coberturaMavenPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <distributionManagement>
        <repository>
          <id>centralArtifactory</id>
          <name>Local Artifactory-releases</name>
          <url>http://127.0.0.1:8181/artifactory/libs-release-local</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <inherited>true</inherited>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>3.0.0-M1</version><!-- 2.8.1 -->
            <configuration>
              <updateReleaseInfo>true</updateReleaseInfo>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <excludeDefaults>true</excludeDefaults>
    <plugins>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${maven.dependencycheck.version}</version>
        <configuration>
          <skipProvidedScope>true</skipProvidedScope>
          <skipRuntimeScope>true</skipRuntimeScope>
          <skipTestScope>true</skipTestScope>
          <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
          <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
          <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
        </configuration>
        <reportSets>
          <reportSet>
            <inherited>false</inherited>
            <id>aggregate</id>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
        <configuration>
          <inputEncoding>UTF-8</inputEncoding>
          <outputEncoding>UTF-8</outputEncoding>
          <linkJavadoc>true</linkJavadoc>
          <destDir>${project.build.directory}/xref</destDir>
          <javadocDir>${project.build.directory}/site/api</javadocDir>
        </configuration>
        <reportSets>
          <reportSet>
            <inherited>false</inherited>
            <id>aggregate</id>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}
        </version><!-- 2.7 -->
        <inherited>false</inherited>
        <configuration>
          <skipEmptyReport>true</skipEmptyReport>
          <dependencyDetailsEnabled>true</dependencyDetailsEnabled>
          <!-- <skip>${module.project}</skip> -->
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>summary</report>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>dependency-info</report>
              <report>dependency-management</report>
              <report>modules</report>
              <report>issue-management</report>
              <report>licenses</report>
              <report>team</report>
              <report>plugins</report>
              <report>plugin-management</report>
              <report>scm</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- To keep until under Github
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>${maven-changes-plugin.version}</version>
        <configuration>
          <githubAPIServerId>github</githubAPIServerId>
          <githubAPIScheme>https</githubAPIScheme>
          <githubAPIPort>443</githubAPIPort>
          <includeOpenIssues>false</includeOpenIssues>
          <onlyMilestoneIssues>false</onlyMilestoneIssues>
        </configuration>
        <reportSets>
          <reportSet>
            <id>aggregate</id>
            <reports>
              <report>changes-report</report>
              <report>github-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId>
        <version>${maven-changelog-plugin.version}</version><!-- 2.3 -->
        <reportSets>
          <reportSet>
            <id>dual-report</id>
            <configuration>
              <skip>${module.project}</skip>
              <basedir>.</basedir>
              <type>range</type>
              <range>3650</range>
            </configuration>
            <reports>
              <report>changelog</report>
              <report>file-activity</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>${taglist-maven-plugin.version}</version><!-- 2.4 -->
        <configuration>
          <encoding>utf-8</encoding>
          <sourceFileLocale>en</sourceFileLocale>
          <emptyComments>false</emptyComments>
          <aggregate>true</aggregate>
          <tagListOptions>
            <tagClasses>
              <tagClass>
                <displayName>Todo Work</displayName>
                <tags>
                  <tag>
                    <matchString>todo</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                  <tag>
                    <matchString>XXX</matchString>
                    <matchType>exact</matchType>
                  </tag>
                  <tag>
                    <matchString>FIXME</matchString>
                    <matchType>exact</matchType>
                  </tag>
                  <tag>
                    <matchString>@deprecated</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                </tags>
              </tagClass>
            </tagClasses>
          </tagListOptions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>analyze-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <xmlOutputDirectory>target/site</xmlOutputDirectory>
          <failOnError>false</failOnError>
          <effort>Default</effort>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <targetJdk>1.8</targetJdk>
          <rulesets>
            <ruleset>${root.directory}/src/assembly/pmd-exclude.xml</ruleset>
          </rulesets>
          <format>xml</format>
          <linkXRef>true</linkXRef>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <minimumTokens>100</minimumTokens>
          <failOnViolation>false</failOnViolation>
          <!-- <skip>${module.project}</skip>-->
          <aggregate>true</aggregate>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <reportSets>
          <reportSet>
            <configuration>
              <attach>false</attach>
              <doclet>org.jboss.apiviz.APIviz</doclet>
              <docletArtifact>
                <groupId>com.grahamedgecombe.apiviz</groupId>
                <artifactId>apiviz</artifactId>
                <version>${apiviz.version}</version>
              </docletArtifact>
              <useStandardDocletOptions>true</useStandardDocletOptions>
              <charset>UTF-8</charset>
              <docencoding>UTF-8</docencoding>
              <breakiterator>true</breakiterator>
              <version>true</version>
              <author>true</author>
              <keywords>true</keywords>
              <doclint>none</doclint>
              <doctitle>${project.name} ${project.version}
              </doctitle>
              <windowtitle>${project.name} ${project.version}
              </windowtitle>
              <javaApiLinks>
                <property>
                  <name>api_1.6</name>
                  <value>http://docs.oracle.com/javaee/6/api/</value>
                </property>
              </javaApiLinks>
              <links>
                <link>http://docs.oracle.com/javaee/6/api/</link>
                <link>http://www.slf4j.org/apidocs/</link>
              </links>
              <encoding>UTF-8</encoding>
              <locale>en_US</locale>
              <excludePackageNames>
                ${project.groupId}.test*:${project.groupId}.example*:${project.groupId}.util.internal*
              </excludePackageNames>
            </configuration>
            <reports>
              <report>javadoc-no-fork</report>
              <!--
              <report>javadoc-no-fork</report>
              <report>test-aggregate-no-fork</report>
              <report>test-javadoc-no-fork</report>
              <report>javadoc</report>
              <report>test-javadoc</report>
              -->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <reportSets>
          <reportSet>
            <configuration>
              <!-- Specific configuration for the aggregate report -->
            </configuration>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <!-- <skip>${module.project}</skip>-->
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <dependencyManagement>
    <dependencies>
      <!-- ######################## Netty dependencies ######################## -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>${netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-tcnative-boringssl-static</artifactId>
        <version>${netty-tcnative.version}</version>
      </dependency>

      <!-- ################## Waarp dependencies #################### -->
      <dependency>
        <groupId>Waarp</groupId>
        <artifactId>WaarpDigest</artifactId>
        <version>${waarp.version}</version>
      </dependency>
      <dependency>
        <groupId>Waarp</groupId>
        <artifactId>WaarpCommon</artifactId>
        <version>${waarp.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xml-apis</artifactId>
            <groupId>xml-apis</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>Waarp</groupId>
        <artifactId>WaarpR66</artifactId>
        <version>${waarp.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xom</artifactId>
            <groupId>xom</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jdom</artifactId>
            <groupId>jdom</groupId>
          </exclusion>
          <exclusion>
            <artifactId>xml-apis</artifactId>
            <groupId>xml-apis</groupId>
          </exclusion>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>xerces</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.snmp4j</groupId>
            <artifactId>snmp4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libthrift</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-exec</artifactId>
        <version>${commons-exec.version}</version>
      </dependency>

      <!-- ####################### Vitam Dependencies #################### -->
      <dependency>
        <groupId>fr.gouv.vitam</groupId>
        <artifactId>ingest-external-client</artifactId>
        <exclusions>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
        </exclusions>
        <version>${vitam.version}</version>
      </dependency>
      <dependency>
        <groupId>fr.gouv.vitam</groupId>
        <artifactId>access-external-client</artifactId>
        <exclusions>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
        </exclusions>
        <version>${vitam.version}</version>
      </dependency>
      <!-- ########## Vitam for Test ****************** -->
      <dependency>
        <groupId>fr.gouv.vitam</groupId>
        <artifactId>ingest-external-rest</artifactId>
        <exclusions>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>transport</artifactId>
          </exclusion>
          <exclusion>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>common-dsl-schema</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
          </exclusion>
        </exclusions>
        <version>${vitam.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>fr.gouv.vitam</groupId>
        <artifactId>access-external-rest</artifactId>
        <exclusions>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>transport</artifactId>
          </exclusion>
          <exclusion>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>common-dsl-schema</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
          </exclusion>
        </exclusions>
        <version>${vitam.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>fr.gouv.vitam</groupId>
        <artifactId>common-private</artifactId>
        <version>${vitam.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.elasticsearch</groupId>
            <artifactId>metrics-elasticsearch-reporter</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>fr.gouv.vitam</groupId>
        <artifactId>common-junit</artifactId>
        <exclusions>
          <exclusion>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>transport</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava-testlib</artifactId>
          </exclusion>
        </exclusions>
        <version>${vitam.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>xml-apis</groupId>
        <artifactId>xml-apis</artifactId>
        <version>1.4.01</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>2.9.9</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>2.9.9</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>2.9.9</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.9.10.3</version>
      </dependency>
      <dependency>
        <groupId>com.github.fge</groupId>
        <artifactId>jackson-coreutils</artifactId>
        <version>1.8</version>
      </dependency>
      <dependency>
        <groupId>com.github.fge</groupId>
        <artifactId>json-patch</artifactId>
        <version>1.9</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-css</artifactId>
        <version>1.8</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>1.23</version>
      </dependency>
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>2.0.1.Final</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.7</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.10.3</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.26</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.5</version>
      </dependency>
      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.2</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>3.0.0</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.11</version>
      </dependency>
      <!-- ########################## Apache Commons ######################### -->
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>


      <!-- ####################### Tests ####################### -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <!-- ensure good version between mockito and selenium -->
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <version>1.9.10</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.ant</groupId>
        <artifactId>ant</artifactId>
        <version>${apache.ant.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.github.jnr</groupId>
        <artifactId>jnr-posix</artifactId>
        <version>${jnr-posix-version}</version>
        <scope>test</scope>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>Waarp</groupId>
        <artifactId>selenium-java</artifactId>
        <version>${selenium.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>fr.gouv.vitam</groupId>
      <artifactId>ingest-external-client</artifactId>
    </dependency>
    <dependency>
      <groupId>fr.gouv.vitam</groupId>
      <artifactId>access-external-client</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpR66</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
    </dependency>
    <!-- test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>fr.gouv.vitam</groupId>
      <artifactId>ingest-external-rest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>fr.gouv.vitam</groupId>
      <artifactId>access-external-rest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>fr.gouv.vitam</groupId>
      <artifactId>common-private</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>fr.gouv.vitam</groupId>
      <artifactId>common-junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-posix</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpCommon</artifactId>
      <classifier>tests</classifier>
      <type>test-jar</type>
      <version>${waarp.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
